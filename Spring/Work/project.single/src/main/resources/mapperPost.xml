<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapperPost">
    
    <select id="getPostList" parameterType="java.util.Map" resultType="ModelPost">
        SELECT postno, author, regdate, content, countgood, countbad, commentNum
        FROM (
            SELECT @RNUM := @RNUM + 1 AS r, a.* 
            FROM (
                    SELECT a.postno postno
                         , a.author 
                         , a.regdate
                         , a.content
                         , a.countgood
                         , a.countbad
                         , count(distinct(c.commentno)) commentNum
                    FROM 
                        postview a
                        LEFT OUTER JOIN comments c ON a.postno = c.postno
                    GROUP BY a.postno , a.author, a.regdate
                    ORDER BY postno DESC
                 ) a, (SELECT @RNUM:=0) b
            ) temp
        WHERE r BETWEEN #{start} AND #{end}
    </select>
    
    <select id="getPostOne" parameterType="int" resultType="ModelPost">
        SELECT * FROM postview
        WHERE postno = #{postno}
    </select>
    
    <insert id="insertPost" parameterType="ModelPost" useGeneratedKeys="true" keyProperty="postno" >
        INSERT INTO 
        postview (   author   , content   , regdate   , countgood, countbad )
          VALUES ( #{author}, #{content}, #{regdate}, 0        , 0        )
    </insert>   
    
    <delete id="deletePost" parameterType="ModelPost">
        DELETE FROM postview 
         WHERE postno = #{postno}
    </delete>
    
    <update id="addCountGood" parameterType="int">
        UPDATE postview SET
          countgood = countgood + 1
         WHERE postno = #{postno}
    </update>
    
    <update id="addCountBad" parameterType="int">
        UPDATE postview SET
          countbad = countbad + 1
         WHERE postno = #{postno}
    </update>
    
    <select id="getAttachImage" parameterType="int" resultType="ModelAttachImage">
        SELECT attachimageno, fileName, fileSize, contentType, imageBytes, imageBase64, postno
          FROM attachimage
         WHERE postno = #{postno}
    </select>
    
    <insert id="insertAttachImage" parameterType="ModelAttachImage">
        INSERT INTO 
        attachimage ( fileName   , fileSize   , contentType   , imageBytes   , imageBase64   , postno    )
        VALUES      ( #{fileName}, #{fileSize}, #{contentType}, #{imageBytes}, #{imageBase64}, #{postno} )
    </insert>
    
    <delete id="deleteAttachImage" parameterType="ModelAttachImage">
        DELETE FROM attachimage          
         WHERE 1 = 1 
          <if test="attachimageno != null and attachimageno != ''" >
          AND attachimageno = #{attachimageno}
          </if>
          <if test="postno != null and postno != ''">
          AND postno  = #{postno}
          </if>
    </delete>
    
    
    <select id="getComment" parameterType="int" resultType="ModelComments">
        SELECT * 
        FROM comments 
        WHERE commentno = #{commentno}
    </select>
    
    <select id="getCommentList" parameterType="int" resultType="ModelComments">
        SELECT *
        FROM comments
        WHERE postno = #{postno}
        ORDER BY commentno DESC
    </select>
    
    
    <insert id="insertComment" parameterType="ModelComments"  useGeneratedKeys="true" keyProperty="commentno" >
        INSERT comments ( postno   , memo   , regdate    )
                 VALUES ( #{postno}, #{memo}, #{regdate} )
    </insert>
    
    <update id="updateComment" parameterType="java.util.Map">
        UPDATE comments 
           SET memo      = #{updateValue.memo   } 
             , regdate   = #{updateValue.regdate} 
         WHERE  1 = 1 
              <if test="searchValue.commentno != null" >
              AND commentno = #{searchValue.commentno}
              </if>
              <if test="searchValue.postno != null">
              AND postno    = #{searchValue.postno}
              </if>
    </update>
    
    <delete id="deleteComment" parameterType="ModelComments">
        DELETE FROM comments 
        WHERE 1 = 1 
          <if test="commentno != null" >
          AND commentno = #{commentno}
          </if>
          <if test="postno != null">
          AND postno  = #{postno}
          </if>
    </delete>

 </mapper>
