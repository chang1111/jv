/*
 * Reference Site 
 * 
 * http://netframework.tistory.com/entry/gradle%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-Spring-MVC-Web-Application-Spring-Data-JPA-QueryDSL
 * http://huskdoll.tistory.com/8
 * http://hangaebal.blogspot.kr/2014/06/spring-eclipse-gradle.html
 *
 * https://github.com/bmuschko/gradle-tomcat-plugin
 * https://github.com/bmuschko/gradle-cargo-plugin
 *
 * http://stackoverflow.com/questions/4384809/cause-no-such-property-sourcesets-for-class-org-gradle-api-plugins-convention
 */

// Apply the java plugin to add support for Java
// Plugin 설정, 만약에 code에 대한 static analysis가 필요한 경우에 이곳에 설정.
apply plugin: 'java'
apply plugin: 'idea'
//apply plugin: 'application'
apply plugin: 'eclipse'


//
group = 'JavaApplication'
version = '1.0.0'
description = 'Java Application'
defaultTasks = ['clean', 'build' /*, 'distZip', 'installApp' */ ]



// JAVA Version 1.8
compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

// 소스 인코딩 UTF-8로 지정
[compileJava, compileTestJava]*.options.collect {options ->
    options.encoding = 'UTF-8'
    options.debug = true
    options.deprecation = true
    options.compilerArgs.add '-Xlint'
    options.compilerArgs.add '-Xlint:-unchecked'
    options.compilerArgs.add '-Xlint:-serial'
    options.compilerArgs.add '-Xlint:-rawtypes'
}


// 메이븐 Central 저장소 사용
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    jcenter()
}


// 의존성 설정
dependencies {

    compile fileTree(dir: "lib", include: ["*.jar"])
 
    // log 라이브러리
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'org.slf4j:slf4j-log4j12:1.7.21'
    compile 'log4j:log4j:1.2.17'
    compile 'com.googlecode.log4jdbc:log4jdbc:1.2'


    // spring 라이브러리    
    compile "org.springframework:spring-core:4.1.7.RELEASE"
    compile "org.springframework:spring-beans:4.1.7.RELEASE"  
    compile "org.springframework:spring-context:4.1.7.RELEASE"
    compile "org.springframework:spring-webmvc:4.1.7.RELEASE"
    compile "org.springframework:spring-aop:4.1.7.RELEASE"
    compile "org.springframework:spring-jdbc:4.1.7.RELEASE"
    compile "org.springframework:spring-tx:4.1.7.RELEASE"


    // mysql 라이브러리
    compile 'mysql:mysql-connector-java:5.1.38'
    

    // mybatis 라이브러리
    compile 'org.mybatis:mybatis:3.2.8'
    compile 'org.mybatis:mybatis-spring:1.2.2'


    // Apache Commons Lang, a package of Java utility classes for the classes that are in java.lang hierarchy, 
    // or are considered to be so standard as to justify existence in java.lang.
    compile "org.apache.commons:commons-lang3:3.4"
    compile "org.apache.commons:commons-dbcp2:2.0"    
    compile 'commons-beanutils:commons-beanutils:1.9.2' 
    compile 'commons-codec:commons-codec:1.10'   
    compile 'commons-collections:commons-collections:3.2' 
       
    //
	compile group: "org.aspectj", name: "aspectjrt" , version: "1.8.6"
	compile group: "org.aspectj", name: "aspectjweaver", version: "1.8.6"
	compile group: "org.aspectj", name: "aspectjtools" , version: "1.8.6"


    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}


// main java 소스셋의 디렉토리 추가
sourceSets {
    main {
        java.srcDirs      = ['src/main/java'     ]      
        resources.srcDirs = ['src/main/resources']
    }
    test {
        java.srcDirs      = ['src/test/java'     ]
    }
}


// TEST 설정
test {
    jvmArgs = ['-ea', '-Xmx256m']
    logging.captureStandardOutput(LogLevel.INFO)
    // testReport = false
    
    systemProperties 'property': 'value'
    
    testLogging {
        events 'started', 'passed'
    }
}
 
